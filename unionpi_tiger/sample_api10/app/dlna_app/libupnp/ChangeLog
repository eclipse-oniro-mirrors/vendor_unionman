*******************************************************************************
Version 1.18.0
*******************************************************************************

*******************************************************************************
Version 1.16.0
*******************************************************************************

        Aborted.

*******************************************************************************
Version 1.14.19
*******************************************************************************

2023-09-16 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

        - Fixed memory allocation in `tv_device.c::TvDeviceSetContrast()`.

2023-08-31 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

        - Updated some old AX macro files to fix bootstrap messages.

*******************************************************************************
Version 1.14.18
*******************************************************************************

2023-06-29 Thomas Guillem <thomas(at)gllm.fr>

        miniserver: fix busy loop on socket error

        In case of a socket error, the socket was not removed from the select
        pool, causing future select() calls to return immediately, and
        readFromSSDPSocket() to be called just after on the failing socket. This
        was causing a high CPU load.

*******************************************************************************
Version 1.14.17
*******************************************************************************

2023-04-30 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

        Include fuzzer and gtest in the tarball.

*******************************************************************************
Version 1.14.16
*******************************************************************************

2023-03-19 philippe44 <philippe44@users.noreply.github.com>

        Fix memory leak and ActionExAsync (#426)

        This intends to fix #424. I've found at least 2 memory leaks

        1- When sending Action(Ex)Async
        The ActionRequest document was not released nor was the ActionResult.
        I initially tought that this should be done in
        UpnpActionComplete::UpnpActionComplete_delete() but I was wrong because
        ActionRequest and ActionResult do not "belong" to the Evt object.
        The sets methods only set a pointer and modifying generator.c is not the
        right solution. The reason is that ActionRequest "belongs" to the ACTION
        job and should be handled as such if we want as well that, when the job
        is cancelled, the memory is released as well. So I've change the
        free_func for ACTION to reflect that.

        2- When using event subscription
        The Event was not released upon Timer termination. So I've done as
        above, created a special free_func that handles that properly.

        In general, when something prevents the execution/submission of a job,
        I've also used the actual free function instead of duplicating the
        individual free(). Note that when terminating a timer, I'm using the
        job's internal structure free_func() as it was already used to access
        arg. One can argue that it should be an opaque structure and get/set or
        the option to call the free function could be use instead.

        Also, I realized that ActionExAsync has never been working properly
        because when the job is executed, only an Action is made, never an
        ActionEx although the Header document is in the job's argument. I've
        fixed that as well and stopped there to not go too deep in that rabbit
        hole.

        I've also removed the upnp_timeout.c/h files as they were not used
        anymore (and had a strange names anyway)

2023-01-04 Thoren Paulson <thoren.paulson@gmail.com>

        Handle redundant initialization

2022-12-22 Thoren Paulson <thoren.paulson@gmail.com>

        Clean up after failed initialization.

        Some initialization failures (such as failure in UpnpGetIfInfo) would
        leave resources like thread pools initialized. This change ensures if
        UpnpInit2 fails, we call UpnpFinish before returning to clean up those
        resources.

        To ensure UpnpFinish is effective in this way, we set UpnpSdkInit to 1
        earlier in UpnpInit2.

*******************************************************************************
Version 1.14.15
*******************************************************************************

2022-11-18 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

        Fix for missing CMake files in the autotools distro.

*******************************************************************************
Version 1.14.14
*******************************************************************************

2022-09-27 philippe44 <philippe44@users.noreply.github.com>

        don't use strxxx_s on Windows

        The use of these fails as 2nd argument is the same as 4th argument.
        Reading the cpp_reference defintions of these, it can't be right.

2022-09-20 Rex Cheung <93339127+rexcheung21(at)users.noreply.github.com>

        Fix #412

        Skip leading UTF-8 BOM in XML document

2022-08-04 Hugo Beauzée-Luyssen <hugo(at)beauzee.fr>

        ThreadPool: Fix non UCRT builds

*******************************************************************************
Version 1.14.13
*******************************************************************************

2021-04-28 Hugo Beauzée-Luyssen <hugo(at)beauzee.fr>

        http: RecvMessage: Fix potential allocation failure

        If for whatever reason the server replies without maxing out the buffer,
        the code would end up doubling the buffer size nonetheless, which can
        quickly cause malloc to fail, once we try to allocate 2^30 or more bytes
        This was especially noticeable for large results.
        Reported as https://code.videolan.org/videolan/vlc/-/issues/27173

*******************************************************************************
Version 1.14.12
*******************************************************************************

2021-04-28 Stephen Anthony Jones <frobones(at)gmail.com>

        Fixes double free caused by closing a file pointer twice.

2021-09-25 Vollstrecker <github@vollstreckernet.de>

        More soname fixes.

*******************************************************************************
Version 1.14.11
*******************************************************************************

2021-08-20 Vollstrecker <github@vollstreckernet.de>

        More soname fixes.

*******************************************************************************
Version 1.14.10
*******************************************************************************

2021-08-17 Vollstrecker <github@vollstreckernet.de>

        Fixes cmake build soname.

*******************************************************************************
Version 1.14.9
*******************************************************************************

2021-08-08 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

        Fixes library soname.

*******************************************************************************
Version 1.14.8
*******************************************************************************

2021-08-02 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

        Removes references to deprecated pthread_mutexattr_{g,s}etkind_np

*******************************************************************************
Version 1.14.7
*******************************************************************************

2021-05-08 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

        Fixes broken windows build.

*******************************************************************************
Version 1.14.6
*******************************************************************************

2021-04-19 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

        Fix for a DNS Rebind exploit. A special thanks for the collaboration
        of the following people:
        - Alaric Senat
        - Fabrice Fontaine
        - Gabriel Corona
        - Ian Whyman
        - Jean-Francois Dockes
        - Marvin Scholz
        - Werner Mahr

2021-04-06 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

        Fix for Github #250:
        When upnp uses ixml to parse SOAP messages which contains too many node,
        services are unavailable.

*******************************************************************************
Version 1.14.5
*******************************************************************************

2021-04-06 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

        Avoid potential memory leak in http_SendMessage()

2021-04-06 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

        Get rid of alloca()'s.

2021-04-05 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

        Non-recursive version of ixmlNode_free() avoids stack overflow attack.
        Fixes CVE-2021-28302.

*******************************************************************************
Version 1.14.4
*******************************************************************************

2021-03-29 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

        Add more missing CMake infrastructure to the tarball.

*******************************************************************************
Version 1.14.3
*******************************************************************************

2021-03-29 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

        Add CMake infrastructure to the tarball.

2021-03-13 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

        Fix for gena leak.

*******************************************************************************
Version 1.14.2
*******************************************************************************

2021-02-17 Jim Broadus <jbroadus(at)gmail.com>

        upnpapi.c: Fix crash in UpnpGetIfInfo

        Per getifaddrs documentation, the ifa_addr field of an ifaddrs structure
        can be null. In a real world example, an entry may be provided for the
        non-existent hardware address of a tunnel device. This behavior was
        observed with the netlink based getifaddrs implementation in glibc.

2021-02-17 Karlchen <k_straussberger(at)netzland.net>

        Handle interfaces without address

        I got a crash on gerbera startup because at least one interface did not have `ifa_addr` set.

        The reason is quite simple: they are the physical interfaces which are part of my channel
        ```
        2: eth1: <BROADCAST,MULTICAST,SLAVE,UP,LOWER_UP> mtu 1500 qdisc fq_codel master bond0 state UP group default qlen 1000
            link/ether xx:xx:xx:xx:xx:xx brd ff:ff:ff:ff:ff:ff
        3: eth0: <BROADCAST,MULTICAST,SLAVE,UP,LOWER_UP> mtu 1500 qdisc fq_codel master bond0 state UP group default qlen 1000
            link/ether xx:xx:xx:xx:xx:xx brd ff:ff:ff:ff:ff:ff
        4: bond0: <BROADCAST,MULTICAST,MASTER,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000
            link/ether xx:xx:xx:xx:xx:xx brd ff:ff:ff:ff:ff:ff
        ```


2021-02-14 Vollstrecker <github(at)vollstreckernet.de>

        CMake:
        - Fix tests for all occasions. (Hopefully)
        - Set right so-version and don't yell commands. Fixes #231
        - Reverted libname-change till decided

2021-02-09 Fabrice Fontaine <fontaine.fabrice(at)gmail.com>

        Fix IPv6 GENA subscription

        Use LOCAL_PORT_V6_ULA_GUA or LOCAL_PORT_V6 depending on the IPv6 address

2021-02-08 Fabrice Fontaine <fontaine.fabrice(at)gmail.com>

        samples: allow the user to specify the control point interface

        This is useful to test UPnP on specific interface (e.g. IPv6-only).
        This was already possible on the device sample.

2021-02-08 Fabrice Fontaine <fontaine.fabrice(at)gmail.com>

        upnp/src/api/upnpapi.c: don't set gIF_IPV4 if there is no IPv4

        Don't set gIF_IPV4 if no IPv4 is found to keep the default value of '\0'
        otherwise SSDP will try to register IPv4 multicast with address 0.0.0.0
        which will result in a runtime failure

*******************************************************************************
Version 1.14.1
*******************************************************************************

2021-02-05 Ian Whyman <ian(at)gerbera.io>

        CMake Github Actions, including windows build.

2021-02-05 Fabrice Fontaine <fontaine.fabrice(at)gmail.com>

        upnpapi.c: assume that getifaddrs is available

        Assume that getifaddrs is available even if it is not POSIX-compliant,
        this will simplify the code and, as a side effect, this allow pupnp to
        work on an interface that does not have an IPv4 address.

2020-12-09 Vollstrecker <github(at)vollstreckernet.de>

        CMake support.

2020-11-30 Marcelo Jimenez <marcelo.jimenez(at)gmail.com>

        GitHub #203 by Vollstrecker, part 2.

        Fixes the inclusion of alloca.h in WIN32.

2020-11-30 Marcelo Jimenez <marcelo.jimenez(at)gmail.com>

        GitHub #203 by Vollstrecker, part 1.

        Remove the now unused file ClientSubscription.c.

2020-11-09 Thomas Mitterfellner <thomas.mitterfellner(at)gmail.com>

        Remove port >= 49152 restriction.

*******************************************************************************
Version 1.14.0
*******************************************************************************

2020-07-19 Marcelo Jimenez <marcelo.jimenez(at)gmail.com>

        Reworked the miniserver code to deal with SO_REUSEADDR

        Factored the common socket code and test for EADDRINUSE returning from
	listen() when SO_REUSEADDR is turned on.

2020-06-17 Marcelo Jimenez <marcelo.jimenez(at)gmail.com>

        Removed template classes.

        The files generated through template classes had some drawbacks:

        1 - You could not read the code.
	2 - You could not step through the code with a debugger.
	3 - Doxygen was unable to document it.

        This patch removes the templates and creates an auto generator for these
	boilerplate generated code in the same spirit of the templates, but
        solves the above problems.

        Still, dealing with documentation still needs some work, but should be
	much easier now.

2020-06-11 Fabrice Fontaine <fontaine.fabrice(at)gmail.com>

        upnpapi.c: retrieve gIF_IPV4_NETMASK with BSD
	GitHub #183

        BSD is using getifaddrs, update the code to retrieve the IPv4 netmask
	(used in the CallStranger fix)

        Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com

2020-06-09 Fabrice Fontaine <fontaine.fabrice(at)gmail.com>

        Drop UpnpInit
	GitHub #182

        This function is deprecated since a long time moreover it is vulnerable
	to CallStranger a.k.a. CVE-2020-12695 and can't be fixed without
	breaking the API as HostIP only allows the user to pass an IP address
	and not a netmask.

        If we want to discover the netmask from the HostIP provided in UPnPInit,
	we'll have to loop through all the available interfaces to find the
	interface with the given IP address to finally retrieve the netmask.
	This is a lot of work/modification for a deprecated function. Moreover,
	in the end UPnPInit will be like a "deprecated" (i.e. IPv4-only) version
	of UPnPInit2.

        So it is time to remove this deprecated function.

        As a result, also remove getlocalhostname and DEFAULT_INTERFACE which
	are not needed anymore and replace UpnpInit by UpnpInit2 in comments.

        Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com

2020-06-09 Fabrice Fontaine <fontaine.fabrice(at)gmail.com>

        Partial fix for CallStranger on IPv4
	GitHub #181

        This is a partial fix for CallStranger a.k.a. CVE-2020-12695

        Check that DeliveryURLs are in the expected network segment as requested
	by the new UPnP UDA:
	https://openconnectivity.org/upnp-specs/UPnP-arch-DeviceArchitecture-v2.0-20200417.pdf.

        Here is an extract of the new requirement:

        The subscription request containing a delivery URL not on the same
	network segment as the fully qualified event subscription URL shall not
	be accepted. For private networks this means that the delivery URL
	provided will adhere to the following IP ranges:

        . 10.0.0.0 - 10.255.255.255 (10/8 prefix)
	. 172.16.0.0 - 172.31.255.255 (172.16/12 prefix)
	. 192.168.0.0 - 192.168.255.255 (192.168/16 prefix)

        In the context of pupnp, this means that the IPv4 netmask is now
	retrieved when using UPnPInit2. Then, each DeliveryURL is checked
	against the device's IPv4 address and netmask. If one of them are not
	compliant, the whole subscription is rejected.

        This first commit should be enhanced / updated to:

        . remove UPnPInit (it is deprecated for a long time) or update it so
	. the user can also pass the netmask
	. fix IPv6
	. fix Windows code
	. retrieve the netmask in the BSD code of UPnPInit2

        Signed-off-by: Fabrice Fontaine fontaine.fabrice@gmail.com

2020-06-04 Patrik Lantz pjlantz(at)github

        Fixes #177

        NULL pointer dereference in FindServiceControlURLPath

*******************************************************************************
Version 1.12.1
*******************************************************************************

2020-04-03 Rene Nielsen <rene.nielsen(at)microchip.com>

	setsockopt(IP_MULTICAST_IF) fails on 64-bit CPUs

2020-04-03 Rosen Penev <rosenp(at)gmail.com>

	GitHub PR #164

	Do not use usleep when using newer POSIX C source.

    	usleep is deprecated and is optionally unavailable with uClibc-ng.

2020-03-29 pamapa <pamapa(at)github>

	GitHub PR #162

	Add Os/UserAgent information to UpnpActionRequest and UpnpFileInfo

2020-03-28 pamapa <pamapa(at)github>

	GitHub PR #161

	Add CtrlPtIPAddr to UpnpFileInfo class

2020-01-27 Ian Whyman <v00d00(at)github>

	GitHub PR #160

	List: Add extern C for C++ users

*******************************************************************************
Version 1.12.0
*******************************************************************************

2020-01-22 Stephen Bash <scbash(at)github>

    Reduce spurious HTTP 416 errors due to ill-defined bytes header

    I (re)discovered this behavior trying to use the Gerbera media server
    with Chromecast (built in to my Vizio P55-F1 TV).  Chromecast specifies
    "bytes:0-" with no end range, which caused pupnp to return
    RANGE_NOT_SATISFIABLE.  Jin, the author of MediaTomb, of which Gerbera
    is a continuation, fixed this in 2007 in MediaTomb's fork of pupnp, see
    gerbera@ccd7994d45 "made sure that range requests specified as
    "bytes=0-" do not trigger...", but never passed the fix upstream.  When
    restarted as Gerbera, pupnp was removed from the local tree in favor of
    using the upstream version, and the patch was lost which lead to me
    rediscovering it recently.

    This is Jin's original patch applied to pupnp 1.8.  This teaches pupnp to
    ignore the bytes header if it matches "0-" and return HTTP_OK.

2020-01-22 Marcelo Jimenez <mroberto(at)users.sourceforge.net>

	GitHub issue #157

	When building v1.8.6 (on GNU/Linux) with --disable-device, pupnp doesn't build:
	/bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I.. -I../upnp/inc  -I./inc -I../ixml/inc  -DNDEBUG -I./src/inc -I./src/threadutil -I/foo/contrib/x86_64-linux-gnu/include -fPIC  -pthread  -I/foo/contrib/x86_64-linux-gnu/include -DNDEBUG=1 -O3  -DUPNP_STATIC_LIB -Os -Wall -c -o src/genlib/util/libupnp_la-util.lo `test -f 'src/genlib/util/util.c' || echo './'`src/genlib/util/util.c
	In file included from src/genlib/miniserver/miniserver.c:58:0:
	./src/inc/upnpapi.h:208:2: error: unknown type name 'service_info'
  	service_info **serv_info
  	^~~~~~~~~~~~

	This patch fixes compilation for the --disable-device case.


2019-11-20 ePirat Marvin Scholz <epirat07(at)gmail.com>

        GitHub PRs:
        #150: Remove unused files
        #149: UpnpEnableWebserver: Error correctly when web server compiled-out
        #148: CI: Remove .travis.yml
        #147: Remove TRUE/FALSE defines and BOOL typedef
        #146: CI: Add address sanitizer and leak sanitizer enabled test run
        #145: Add list test
        #144: Add -Wextra and -Wpedantic to get more warnings
        #143: More warning fixes
        #142: Doxygen changes
        #141: Remove unused headers
        #140: Remove IN, OUT and INOUT defines
        #139: Remove unused defines in uri.h
        #138: Use stdbool.h instead of BOOL typedef and defines
        #137: Various compiler warning fixes
        #136: configure.ac: Fix Windows detection
        #135: configure.ac: Enable silent rules
        #134: LinkedList: Simplify _WIN32 check
        #133: Remove checks of __OSX__ define
        #132: Add Github Actions based CI

2019-12-03 Jean-Francois Dockes <jf(at)dockes.org>

        Github PR #130: Add forgotten Windows dll export qualifiers

2019-12-01 Jean-Francois Dockes <jf(at)dockes.org>

        Github PR #129: Remove and replace the list.h file

2019-11-20 ePirat Marvin Scholz <epirat07(at)gmail.com>

	Github PRs:

	#128: Overhaul list.h to fix various issues
	#127: Use rand_s in get_random_info on Windows
	#126: Do not redeclare timezone struct if already defined in Mingw
	#125: Fix interface filtering for Windows
	- The mentioned fix is not only needed for MSVC, but when
	cross-compiling for Windows with mingw-w64 too.
	#124: config.h: Remove DEBUG_TARGET
	- The DEBUG_TARGET is no longer used, it was previously used in
	upnpdebug.c to disable logging to a file, which now is done
	by just not calling UpnpSetLogFileNames.
	#123: Check for -lpthread too
	- Updates pthread m4 check from upstream

*******************************************************************************
Version 1.10.1
*******************************************************************************

2019-11-20 Marcelo Jimenez <mroberto(at)users.sourceforge.net>

	Forward port of Karlchen's github #122
	Fix format string for ExtraHeaders

*******************************************************************************
Version 1.10.0
*******************************************************************************

2019-07-19 Marcelo Jimenez <mroberto(at)users.sourceforge.net>

	Fix sed command for upnp patch in configure.ac

2019-04-03 Marcelo Jimenez <mroberto(at)users.sourceforge.net>

	Proper allocation for an array of structs and a check for an unlikely
	overflow when calling the SIOCGIFCONF ioctl().

	It still bugs me the stack requirements of getlocalhostname() and
	UpnpGetIfInfo().

*******************************************************************************
Version 1.8.6
*******************************************************************************

2019-11-20 Karl Straussberger (Karlchen@github)

	Fix format string for ExtraHeaders #122

*******************************************************************************
Version 1.8.5
*******************************************************************************

2019-07-18 Marcelo Jimenez <mroberto(at)users.sourceforge.net>

	Fixed a wrong ifdef in ssdp_device.c that was causing problems with
	ipv6. Thanks to BraneDev @ Github

*******************************************************************************
Version 1.8.4
*******************************************************************************

2017-11-17 Marcelo Jimenez <mroberto(at)users.sourceforge.net>

	GitHub #57 - 1.8.3 broke ABI without changing SONAME
	Opened by jcowgill

	This change in 1.8.3 broke the ABI and therefore the SONAME should have
	been changed (ie: age reset to 0):

	EXPORT_SPEC int UpnpAddVirtualDir(
	        /*! [in] The name of the new directory mapping to add. */
	-       const char *dirName);
	+       const char *dirName,
	+       /*! [in] The cookie to associated with this virtual directory */
	+       const void *cookie,
	+       /*! [out] The cookie previously associated, if mapping is already present */
	+       const void **oldcookie);

	If only the cookie argument was added, you could probably get away with
	this because all that would happen is that a garbage value is passed
	around without being used. With the addition of oldcookie, any old
	programs will not initialize this value and will probably segfault when
	libupnp tries to write to it.

*******************************************************************************
Version 1.8.3
*******************************************************************************

2017-09-07 Dave Overton <david(at)insomniavisions.com>

	Add user data/cookie to virtualDir callbacks

	As with the main Device APIs (UpnpRegisterRootDevice etc), it is useful
	to have a user data/cookie pointer returned with each callback.

	This patch allows one cookie per registered path which enables a variety
	of functionality in client apps.

2017-09-03 Uwe Kleine-König <uwe@kleine-koenig.org>

	Fix large file system support

	libupnp uses large file support (if available). If a program linking to
	libupnp does not however it creates mismatches in call frames. See
	Issue #51 for the results.

	This simplifies LFS support by using AC_SYS_LARGEFILE_SENSITIVE instead of
	manually defining _LARGE_FILE_SOURCE and _FILE_OFFSET_BITS (which is
	useless on architectures where the size of off_t is fixed).

	Furthermore additional logic is introduced to catch a library user without
	64 bit wide off_t on such a platform.

	upnp.h also makes use of off_t, but as this file includes FileInfo.h, the
	latter is the single right place for this check.

	This fixes #52 which is a generalized variant of #51.

2017-08-19 Uwe Kleine-König <uwe@kleine-koenig.org>

	configure.ac: Drop copying of include files

	The comment suggests this is for windows compilation. It should be easily
	possible to add the source directory as an include path to the windows
	compiler, too, so drop this. (Otherwise this should better be done using
	AC_CONFIG_COMMANDS.)

2017-09-03 Uwe Kleine-König <uwe@kleine-koenig.org>

	Let source code use autoconfig.h not the public upnpconfig.h

	The former is the one supposed to be used for internal code. upnpconfig.h is only
	for public stuff.

2017-08-19 Uwe Kleine-König <uwe@kleine-koenig.org>

	configure.ac: Fix typo s/optionnal/optional/

2017-08-08 Marcelo Jimenez <mroberto(at)users.sourceforge.net>

	Fix broken samples when configured with --disable-ipv6.

*******************************************************************************
Version 1.8.2
*******************************************************************************

2017-07-24 Michael Osipov

	Initialize in_addr and in6_addr to avoid garbage output if never written

	If any of the address families isn't available in UpnpGetIfInfo(),
	especially IPv6, always init both structs with zero to avoid garbage
	output with inet_ntop() to gIF_IPV4 and gIF_IPV6.

	See v00d00/gerbera#112 (https://github.com/v00d00/gerbera/issues/112)
	for consequences: bind for IPv6 will fail.

2013-10-28 Vladimir Fedoseev <va-dos(at)users.sourceforge.net>

	Attached patch allows to register multiple clients from single app.

2014-11-14 Philippe <philippe44ca(at)users.sourceforge.net>

	Hi - I recently compiled libupnp on C++ Builder XE7 and had to do a few
	changes to make it work. In case this helps, I've generated a small
	patch file.

2015-04-30 Hugo Beauzée-Luyssen <chouquette(at)users.sourceforge.net>

	When building using a strict mode (-std=c++11 instead of -std=gnu++11,
	for instance), the WIN32 macro isn't defined. The attached patch fixes
	it by using _WIN32 instead.

2015-02-06 Jean-Francois Dockes <jf@dockes.org>

	Queue events on their subscription object instead of adding them to the
	thread pool immediately.

	Events destined for a non-responding control point would flood the
	thread pool and prevent correct dispatching to other clients, sometimes
	to the point of disabling the device. Events are now queued without
	allocating thread resources and properly discarded when a client is not
	accepting them.

2015-02-03 Jean-Francois Dockes <jf@dockes.org>

	genaInitNotify()/genaInitNotifyExt() and
	genaNotifyAll()/genaNotifyAllExt() are relatively complicated methods
	which only differ by the format of an input parameter. This update
	extracts the common code for easier maintenance, esp. relating to the
	queueing modifications to follow.


*******************************************************************************
Version 1.8.1
*******************************************************************************

2017-04-26 Marcelo Jimenez <mroberto(at)users.sourceforge.net>

	Fix some compiler warning messages on md5.c

2017-03-07 Fabrice Fontaine <fontaine.fabrice(at)gmail.com>

	Enable IPv6 by default

2017-03-07 Fabrice Fontaine <fontaine.fabrice(at)gmail.com>

	Move threadutil source code to libupnp

	With this patch, threadutil library is removed as the only public
	header that has been kept in 1.8.x is ithread.h which is mainly a
	wrapper to pthread with inline functions.
	threadutil source code will now be a part of libupnp library.

*******************************************************************************
Version 1.8.0
*******************************************************************************

2014-01-15 Peng <howtofly(at)gmail.com>

	Fix memory leaks.

2013-04-27 Thijs Schreijer <thijs(at)thijsschreijer.nl>

	Renamed SCRIPTSUPPORT to IXML_HAVE_SCRIPTSUPPORT for consistency. Also
	updated autoconfig and automake files, so it also works on non-windows.
	Option is enabled by default, because it adds an element to the node
	structure. Not using an available field is better than accidentally
	using an unavailable field.

2012-07-11 Thijs Schreijer <thijs(at)thijsschreijer.nl>

	Changed param to const UpnpAcceptSubscriptionExt() for consistency

2012-06-07 Thijs Schreijer <thijs(at)thijsschreijer.nl>

	updated ixmlDocument_createAttributeEx() and ixmlDocument_createAttribute()
	to use parameter DOMString instead of char * (same but now consistent)

2012-05-06 Thijs Schreijer <thijs(at)thijsschreijer.nl>

	Added script support (directive SCRIPTSUPPORT) for better support of
	garbage collected script languages. The node element gets a custom tag
	through ixmlNode_setCTag() and ixmlNode_getCTag(). And a callback upon
	releasing the node resources can be set using ixmlSetBeforeFree()
	See updated readme for usage.

2012-03-24 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3510595 - UpnpDownloadXmlDoc : can't get the file

	Submitted: Marco Virgulti ( mvirg83 ) - 2012-03-23 10:08:08 PDT

	There is a problem, perhaps, during downloading a document by
	UpnpDownloadXmlDoc. During debugging i've found that in an not exported
	api (unfortunately i forgot the code line...) where it is set a
	local variable "int timeout" to -1 then passed directly to another
	function for sending data through tcp socket. I patched this setting it
	to 0 (there is an IF section that exits if timeout < 0). It is normal
	behavior or it is a bug?

2012-03-08 Fabrice Fontaine <fabrice.fontaine(at)orange-ftgroup.com>

	Check for NULL pointer in TemplateSource.h

	calloc can return NULL so check for NULL pointer in CLASS##_new and
	CLASS##_dup.

2012-03-08 Fabrice Fontaine <fabrice.fontaine(at)orange-ftgroup.com>

	Replace strcpy with strncpy in get_hoststr

	Replace strcpy with strncpy to avoid buffer overflow.

2012-03-08 Fabrice Fontaine <fabrice.fontaine(at)orange-ftgroup.com>

	Memory leak fix in handle_query_variable

	variable was never freed.

2011-02-07 Chandra Penke <chandrapenke(at)mcntech.com>

	Add HTTPS support using OpenSSL. HTTPS support is optional and can
	be enabled by passing the --enable-open-ssl argument to the
	configure script.

	The following methods are introduced to the public API:
	UpnpInitOpenSslContext

	When enabled, HTTPS can be used by using "https://" instead of
	"http://" when passing URLs to the HTTP Client API.

2011-02-07 Chandra Penke <chandrapenke(at)mcntech.com>

	Refactor HTTP Client API to be more generic.

	The following features are added:

	- Support for persistent HTTP connections (reusing HTTP
	  connections). This is still a work in progress and relies on
	  applications to interpret the 'Connection' header
	  appropriately.

	- Support for specifying request headers when making
	  requests. Useful for interacting with web services that require
	  custom headers.

	- Support for retrieving response headers (this is a API only
	  change, some more work needs to be done to implement the actual
	  functionality. Specifically copy_msg_headers in httpreadwrite.c
	  needs to be implemented)

	- Common API for all HTTP methods.

	- Support for PUT, and DELETE methods.

	The following methods are introduced to the public HTTP Client API

	UpnpOpenHttpConnection, UpnpCloseHttpConnection, UpnpMakeHttpRequest,
	UpnpWriteHttpRequest, UpnpEndHttpRequest, UpnpGetHttpResponse,
	UpnpReadHttpResponse.

	Removed a lot of duplicate code in httpreadwrite.c

2011-01-17 Chandra Penke <chandrapenke(at)mcntech.com>

	Include upnpconfig.h in FileInfo.h to automatically include large
	file macros

2011-01-17 Chandra Penke <chandrapenke(at)mcntech.com>

	Fix for warnings Apple systems related to macros defined in list.h.

	In list.h, in apple systems, undefine the macros prior to defining them.

2011-01-16 Marcelo Jimenez <mroberto(at)users.sourceforge.net>

	Fix for UpnpFileInfo_get_LastModified() in http_MakeMessage().

	UpnpFileInfo_get_LastModified() returns time_t, and http_MakeMessage()
	takes a "time_t *". Thanks to Chandra Penke for pointing the bug.

2010-11-22 Marcelo Jimenez <mroberto(at)users.sourceforge.net>

	Template object for ssdp_ResultData.

2010-11-10 Fabrice Fontaine <fabrice.fontaine(at)orange-ftgroup.com>

	Support for "polling" select in sock_read_write.

	Currently, in sock_read_write function, if the timeout is 0, pupnp
	realizes a "blocking" select (with an infinite timeout). With this
	patch, if timeout is set to 0, pupnp will realize a "polling" select
	and returns immediately if it can not read or write on the socket. This
	is very useful for GENA notifications when pupnp is trying to send
	events to a disconnected Control Point. "Blocking" select can now be
	done by putting a negative timeout value.

2010-09-18 Chandra Penke <chandrapenke(at)mcntech.com>

	This is a minor build fix. The new Template*.h files added in the latest
	code need to be exported. Patch against the latest sources is attached.

2010-08-22 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* upnp/src/api/Discovery.c: Fix a serious bug and memory leak in
	UpnpDiscovery_strcpy_DeviceType(). Thanks to David Blanchet for the
	patch.

2010-04-25 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	Separation of the ClientSubscription object.

2010-04-24 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	Protect the object destructors against null pointers on deletion, which
	should be something valid.

2010-03-27 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	SF Patch Tracker [ 2987390 ] upnp_debug vs. ixml_debug
	Thanks for the load of updates, I'm still assimilating them ! Could I make
	a suggestion though? The addition of printNodes(IXML_Node) to upnpdebug a
	dds a new dependency on ixml.h for anything using upnpdebug.h. I'm making
	quite a bit of use of upnpdebug in porting things to version 1.8.0, and I'd
	prefer it if printNodes could be added to ixmldebug.h instead. I'm attach
	ing a patch, what do you think ?

	Nick

2010-03-27 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* Forward port of svn revision 505:
	SF Patch Tracker [ 2836704 ] Patch for Solaris10 compilation and usage.
	Submitted By: zephyrus ( zephyrus00jp )

2010-03-20 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* SF Patch Tracker [ 2969188 ] 1.8.0: patch for FreeBSD compilation
	Submitted By: Nick Leverton (leveret)
	Fix the order of header inclusion for FreeBSD.

2010-03-20 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* Forward port of svn revision 502:
	SF Patch Tracker [ 2836704 ] Search for nested serviceList (not
	stopping at the first lis
	Submitted By: zephyrus ( zephyrus00jp )

	Internet Gateway Device description contains nested serviceList (rootdevice
	-> servicelist, subdevice
	and subdevice has the lower-level serviceList, etc..)

	Unfortunately, the sample code sample_util.c used by tv_device sample,
	etc.
	has a code that looks for only the first top-level serviceList.
	This results in the failure to read all the services of an IGD xml
	description.

	Attached patch modifies this behavior and looks for the service by
	visiting all the serviceList in xml document in turn.

	With the modified patch (ad additional modification), I could
	simulate an IGD device and created a modified control program for that.

	Patch against 1.6.6

	TIA.

2010-03-20 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* SF Patch Tracker [ 2973319 ] Problem in commit 499
	Submitted By: Nick Leverton (leveret)
	Afraid that this doesn't compile, it seems retval should be retVal in two
	places.

2010-03-16 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* Fix for the ithread_mutex_unlock() logic in UpnpInit().
	Thanks for Nicholas Kraft.

2010-03-15 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* SF Patch Tracker [ 2962606 ] Autorenewal errors: invalid SID,
	too-short renewal interval
	Submitted By: Nick Leverton (leveret)

	Auto-renewals send an invalid SID due to a missing UpnpString_get_String
	call. They also send a renewal interval of 0 instead of copying it from
	the original subscription.

2010-03-15 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* SF Patch Tracker [ 2964685 ] patch for avoiding inet_ntoa (1.8.0)
	Submitted By: Nick Leverton (leveret)

	Seems like SF's tracker won't let me add a patch to someone else's issue ?!
	This refers to https://sourceforge.net/support/tracker.php?aid=2724578

	The calls to inet_ntoa are in getlocalhostname(), which is called from
	UpnpInit when it is returning the bound IP address.
	UpnpInit/getlocalhostname hasn't been updated to IPv6, I presume this is
	deliberate so that it doesn't start returning IPv6 addresses and
	overwriting the caller's IPv4-sized allocation.

	The attached patch just updates getlocalhostname to use inet_ntop instead
	of inet_ntoa, and also documents the fact that UpnpInit is IPv4 only whilst
	UpnpInnit2 is both IPv4 and IPv6.

	A fuller solution might be to change UpnpInit to use some variant on
	UpnpGetIfInfo. UpnpInit could still be left as IPv4 only if desired -
	perhaps UpnpGetIfInfo could take an option for the desired address family.
	getlocalhostname and its own copy of the interface scanning code would then
	be redundant. I don't have IPv6 capability here though so I'm reluctant to
	change the IPv6 code, as I have no way to test it.

2010-03-15 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* SF Patch Tracker [ 2724578 ] patch for avoiding memory leaks when
	add devices

	each time a device been added, UpnpInit() is called, on exit, UpnpFinish()
	is called, but the memories allocated by ThreadPoolInit() may lost because
	there's no code to call ThreadPoolShutdown() to release the memories. And
	inet_ntoa() is not thread safe, so in my patch, I substitute inet_ntoa()
	with inet_ntop().

2010-03-14 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* SF Patch Tracker [ 2964687 ] Add new string based accessors to upnp
	object API

	As per email to pupnp-devel, this is the patch to add the _strget_
	accessors for string-like objects in the interface.

	Will add a further patch shortly to update the sample programs.

2008-06-27 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* Nicholas Kraft's patch to fix some IPv6 copy/paste issues. He
	reported to be getting infinite loops with the svn code.

2008-06-13 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* SF Bug Tracker [ 1984541 ]
	ixmlDocumentToString does not render the namespace tag.
	Submitted By: Beliveau - belivo

	Undoing the patch that fixed this problem. In fact, there was no
	problem and the patch was wrong.

2008-06-11 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* Ingo Hofmann's patch for "Content-Type in Subscription responses".
	Adds charset="utf-8" attribute to the CONTENT-TYPE header line.

	Hi,

	I have found an inconsistency regarding the text/xml content-type
	returned by libupnp. It looks like only subscription responses send
	"text/xml" where all other messages contain "text/xml; charset="utf-8"".
	Since I'm working on an DLNA device the latter behavior is mandatory.
	I changed the according lines in gena_device.c (see attached patch).
	I'm not sure if it would be ok for other device to have the charset
	field but it would help me a lot :)

	Best regards,
	Ingo

2008-06-04 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* SF Bug Tracker [ 1984541 ]
	ixmlDocumentToString does not render the namespace tag.
	Submitted By: Beliveau - belivo

	The problem occurs when converting a xml document using
	ixmlDocumentToString containing a namespace tag created with
	ixmlDocument_createElementNS. The namespace tag doesn't get rendered.

	example: The following code fragment prints:

	<?xml version="1.0"?>
	<root></root>

	instead of:
	<?xml version="1.0"?>
	<root xmlns="urn:schemas-upnp-org:device-1-0"></root>

	Code:

	#include <stdlib.h>
	#include <upnp/ixml.h>

	int main()
	{
		IXML_Document* wDoc = ixmlDocument_createDocument();
		IXML_Element* wRoot = ixmlDocument_createElementNS(wDoc,
			"urn:schemas-upnp-org:device-1-0", "root");
		ixmlNode_appendChild((IXML_Node *)wDoc,(IXML_Node *)wRoot);
		DOMString wString = ixmlDocumentToString(wDoc);
		printf(wString);
		free(wString);
		ixmlDocument_free(wDoc);

		return 0;
	}

	The problem was in the printing routine, not in the library data
	structure.

2008-05-31 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* Charles Nepveu's suggestion of not allocating a thread for
	MiniServer when it is not compiled.

2008-05-24 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* Ported Peter Hartley's patch to compile with mingw.

2008-05-24 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* Added some debug capability to ixml.

2008-05-02 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* Merged Charles Nepveu's IPv6 work. libupnp now is IPv6 enabled.

2008-02-06 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* Breaking API so that we now hide internal data structures.

2008-02-06 Marcelo Jimenez <mroberto(at)users.sourceforge.net>
	* Rewrote Peter Hartley's patch to include a new extra header field in
	FileInfo.

*******************************************************************************
Version 1.6.22
*******************************************************************************

2017-07-07 James Cowgill <james410(at)cowgill.org.uk>

	Replace MD5 implementation with public-domain version

	Currently the RSA MD5 implementation is used. Unfortunately the license
	has some potential issues:
	* The license does not explicitly allow distributing derivative works.
	This was the original argument used in
	[Debian #459516](https://bugs.debian.org/459516).
	* The license contains an advertising clause similar to the BSD 4-clause
	license. This is incompatible with the GPL and if it were enforced,
	would require RSA to be mentioned by pretty much everyone who uses pupnp.

	The simple solution is to replace it with a public domain
	implementation. I've taken OpenBSDs implementation and tweaked it
	slightly for use by pupnp by:
	- Adjusting the includes.
	- Removing the __bounded__ attributes which are specific to OpenBSD.
	- Using the standard integer types from stdint.h.
	- Using memset instead of explicit_bzero.

2016-12-16 Peter Pramberger <peterpramb(at)users.sf.net>

	ixml/test/test_document.c is missing the string.h include, therefore
	the compiler complains about an implicit declaration.

*******************************************************************************
Version 1.6.21
*******************************************************************************

2016-12-16 Gabriel Burca <gburca(at)github>

	If the error or info log files can not be created, use stderr and
	stdout instead.

2016-12-08 Uwe Kleine-König <uwe(at)kleine-koenig.org>

	Fix out-of-bound access in create_url_list() (CVE-2016-8863)

	If there is an invalid URL in URLS->buf after a valid one, uri_parse is
	called with out pointing after the allocated memory. As uri_parse writes
	to *out before returning an error the loop in create_url_list must be
	stopped early to prevent an out-of-bound access

	Bug: https://sourceforge.net/p/pupnp/bugs/133/
	Bug-CVE: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-8863
	Bug-Debian: https://bugs.debian.org/842093
	Bug-Redhat: https://bugzilla.redhat.com/show_bug.cgi?id=1388771

2016-11-30 Uwe Kleine-König <uwe(at)kleine-koenig.org>

	miniserver: fix binding to ipv6 link-local addresses

	Linux requires to have sin6_scope_id hold the interface id when binding to
	link-local addresses. This is already in use in other parts of upnp, so
	portability shouldn't be in the way here. Without this bind(2) fails with
	errno=EINVAL (although ipv6(7) from man pages 4.08 specifies ENODEV in this
	case).

	Fixes: https://bugs.debian.org/813249

2016-09-15 Mathew Garret <(at)mjg59 (twitter)>

	SF Bug Tracker #132 CVE-2016-6255: write files via POST

	Submitted by: Balint Reczey in 2016-08-02

	From Debian's BTS https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=831857 :
	From: Salvatore Bonaccorso carnil@debian.org
	To: Debian Bug Tracking System submit@bugs.debian.org
	Subject: libupnp: write files via POST
	Date: Wed, 20 Jul 2016 11:03:34 +0200
	Source: libupnp
	Version: 1:1.6.17-1
	Severity: grave
	Tags: security upstream
	Justification: user security hole
	Hi
	See http://www.openwall.com/lists/oss-security/2016/07/18/13 and
	https://twitter.com/mjg59/status/755062278513319936 .
	Proposed fix:
	https://github.com/mjg59/pupnp-code/commit/be0a01bdb83395d9f3a5ea09c1308a4f1a972cbd
	Regards,
	Salvatore

	From Mathew Garret's commit: Don't allow unhandled POSTs to write to the filesystem by default

*******************************************************************************
Version 1.6.20
*******************************************************************************

2016-02-22 Jean-Francois Dockes <medoc(at)users.sf.net>

	SF Bugs #131, Creator: Jean-Francois Dockes

	I know it sounds crazy that nobody ever saw this, but the CONTENT-LENGTH
	value in GENA NOTIFY messages is too small by one.

	It appears that most current control points don't notice the extra
	character (an LF, which is validly there but not included in
	Content-Length), probably because their protocol handler is reasonably
	lenient, and because the missing body LF does not prevent parsing the
	XML. But there is a least one anal CP (Linn Kazoo) which barfs, because
	it reads all data until connection close and the size mismatch triggers
	a bug.

	"Proof":
	In gena_device.c:217 (notify_send_and_recv())

	ret_code = http_SendMessage(&info, &timeout,
	    "bbb",
	    start_msg.buf, start_msg.length,
	    propertySet, strlen(propertySet),
	    CRLF, strlen(CRLF));

	start_msg has all the headers, including the empty line.
	Content-length should be strlen(propertySet) + strlen(CRLF) (2)
	In gena_device.c:433 (AllocGenaHeaders())

	rc = snprintf(headers, headers_size, "%s%s%"PRIzu"%s%s%s",
	    HEADER_LINE_1,
	    HEADER_LINE_2A,
	    strlen(propertySet) + 1,
	    HEADER_LINE_2B,
	    HEADER_LINE_3,
	    HEADER_LINE_4);

	HEADER_LINE_2A is "CONTENT-LENGTH: ".
	The following value should be strlen(propertySet) + 2

2016-01-07 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

	Fix for a reported integer overflow

2016-01-07 Jean-Francois Dockes <medoc(at)users.sf.net>
2016-01-07 Nick Leverton <nick(at)leverton.org>
	SF Patches #60, Creator: Jean-Francois Dockes

	When libupnp is configured with --enable-ipv6 but ipv6 is not available
	on the system (for example because the ipv6 code is not loaded in a Linux
	kernel as is the case by default on Raspbian), the ipv6 socket creation
	call will fail in miniserver.c and the library init will fail, even if
	the ipv4 initialization would have succeeded.

	Let a library configured with --enable-ipv6 initialize in ipv4-only
	mode if ipv6 is not available instead of failing. This can happen
	if no ipv6 code is configured or loaded in the kernel.

	Don't fail if IPv6 is unavailable.
	We might be an IPv6 enabled distro build running on an IPv4-only custom kernel.

2016-01-07 Nick Leverton <nick(at)leverton.org>

	SF Bug Tracker #128, Creator: Nick Leverton
	redefining strndup causes "error: expected identifier or '(' before '__extension__'"

	Fix redefinition of strnlen and strndup
	These are available when HAVE_STRNDUP and HAVE_STRNLEN are defined, but
	libupnp provides an extern prototype anyway.  Recent versions of glibc
	define this prototype differently, causing the following compile error:

	src/api/UpnpString.c:47:15: error: expected identifier or '(' before  '__extension__'
		extern char *strndup(__const char *__string, size_t __n);

2016-01-07 Nick Leverton <nick(at)leverton.org>

	SF Bug Tracker #129, Creator: Nick Leverton
	shutdown() on UDP sockets logs ENOTCONN message.
	https://sourceforge.net/p/pupnp/bugs/129/

	Fix ENOTCONN "Error in shutdown: Transport endpoint is not connected"

	When logging is enabled, ssdpserver logs bursts of
	"Error in shutdown: Transport endpoint is not connected"
	This is because shutdown() is not supported for UDP sockets and under
	recent UNIX specifications it returns ENOTCONN if used.

2016-01-07 Nick Leverton <nick(at)leverton.org>

	SF Bug Tracker #127, Creator: Klaus Fischer
	Miniserver uses INADDR_ANY instead of HostIP
	https://sourceforge.net/p/pupnp/bugs/127/

	The internal miniserver.c uses INADDR_ANY instead of the HostIP/IfName
	provided when initializing libupnp. But, this HostIP/IfName gets used
	for the UDP socket when multicasting SSDP messages.  Because of this,
	miniserver may end up sending from different IP address than ssdpserver.
	This patch causes miniserver to use the already known interface address.

2016-01-07 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

	SF Bug Tracker #130, Creator: Shaddy Baddah
	infinite loop in UpnpGetIfInfo() under WIN32

	Original code makes no sense. This patch should fix it.

2015-02-04 Shaun Marko <semarko@users.sf.net>

	Bug tracker #124 Build fails with --enable-debug

	Build environment
	Fedora 21
	X86-64
	* gcc 4.9.2

	How to repeat
	$ ./configure --enable debug
	$ make
	libtool: compile: gcc -DHAVE_CONFIG_H -I. -I.. -I../upnp/inc -I./inc -I../threadutil/inc
	-I../ixml/inc -I./src/inc -pthread -g -O2 -Wall -MT src/api/libupnp_la-UpnpString.lo
	-MD -MP -MF src/api/.deps/libupnp_la-UpnpString.Tpo -c src/api/UpnpString.c
	-fPIC -DPIC -o src/api .libs/libupnp_la-UpnpString.o src/api/UpnpString.c:47:16:
	error: expected identifier or '(' before 'extension'
	extern char *strndup(const char *string, size_t __n);
	^
	Makefile:1016: recipe for target 'src/api/libupnp_la-UpnpString.lo' failed

	Reason for failure
	Build enables -O2 optimization flags which causes the inclusion of a
	macro implementation of strndup from include/bits/string2.h.

	Workarounds
	Disable optimization when configuring or making:
	$ configure CFLAGS='-g -pthread -O0' --enable-debug
	$ make
	or
	$ configure --enable-debug
	$ make CFLAGS='-g -pthread -O0' Define NO_STRING_INLINES
	$ export CFLAGS="-DNO_STRING_INLINES -O2"
	$ ./configure --enable-debug
	$ make

	Fix
	* Don't declare strndup in src/api/UpnpString.c if it exists

2015-02-01 Jean-Francois Dockes <medoc@users.sf.net>

	Out-of-tree builds seem to be currently broken, because ixml and
	threadutil files need an include path to include UpnpGlobal.h, and
	configure tries to copy files into a directory which it does not create.
	The patch fixes both issues.

2014-01-03 Peng <howtofly(at)gmail.com>

	rewrite soap_device.c

	1) separate HTTP handling from SOAP handling
	2) remove repeated validity check, each check is performed exactly once
	3) fix HTTP status code per UPnP spec, SOAP spec and RFC 2774

*******************************************************************************
Version 1.6.19
*******************************************************************************

2013-11-14 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

	SF Bug Tracker #119, Creator: Klaus Fischer
	Access violation due to changed usage of pthreads-win32

	Dear libupnp developers,

	I have experienced a crash (access violation) when using libupnp on
	Windows. The crash is actually located in pthreads-win32 and happens
	when repeatedly de-/initializing libupnp on Win32 in the same process
	and both libupnp and pthreads-win32 are compiled as static libraries.

	So I'm doing this:
	- UpnpInit()
	- UpnpFinish()
	- UpnpInit() <- Crash

	I am already in touch with Ross Johnson on the pthreads-win32 mailing
	list regarding this issue:

	http://sourceware.org/ml/pthreads-win32/2013/msg00020.html

	He told me the problem is that the functions
	pthread_win32_process_attach/detach_np() should no longer be called
	directly, but are invoked automatically now since version 2.9.0 of
	pthreads-win32, which has been released approx. 1.5 years ago. Please
	refer to above link for in-depth information.

	So for proper using of latest pthreads-win32 library, those function
	calls should vanish inside libupnp. Could you consider adapting libupnp
	in that way? I would really like to use both libraries out-of-the-box
	without local modifications, and this issue prevents that.

	Best regards,
	Klaus

2013-11-08 Peng <howtofly(at)gmail.com>

	Fix several minor bugs in soap_device.c

	1) remove redundant free
	2) avoid user-provided ErrStr being overwritten by the default one
	3) eliminated memory leak possibility in handle_query_variable

2013-11-08 Peng <howtofly(at)gmail.com>

	Fix return value check of parse_uri.

2012-06-19 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	SF Bug Tracker #118, Creator: T.Iwamoto
	tv_ctrlpt crashes after detecting a later version of tvcontrol service

	From:  gon3456@users.sf.net
	Steps to reproduce:
	1. Extracts and build libupnp-1.6.18
	$ tar -xjf /path/to/archive/libupnp-1.6.18.tar.bz2
	$ cd libupnp-1.6.18
	$ ./configure
	$ make
	2. Applies the attached patch and remake.
	$ patch -p1 < /path/to/patch/libupnp-1.6.18.patch
	$ make
	3. Run tv_device.
	$ cd upnp/sample
	$ ./tv_device
	4. Run tv_ctrlpt; the tv_ctrlpt crashes soon.
	$ ./tv_ctrlpt
	Segmentation fault (core dumped)
	This is an issue report about the sample program of control point.
	The tv_ctrlpt crashes after detecting a tvdevice that contains tvcontrol:2 or higher version of tvcontrol service.
	tv_ctrlpt should detect correctly such devices due to forward compatibility of control points with device.
	For more information about the compatibility, please refer the following document:
	DLNA Architectures and Protocols Part 1 2011 December - 7.3.2.1.3 (GUN:GZJXU)
	The attached patch changes the sample programs as below:
	- device: changes version of tvcontrol service from 1 to 2. This change may occur in the future.
	- cp: nothing changed: cp knows version 1 of tvcontrol service only.
	I know many vendors implements their control points based on the tv_ctrlpt, so I hope to fix this issue ASAP.

	==

	From: Yoichi NAKAYAMA
	SEGV is caused by strcpy with NULL argument.
	Attached patch will avoid SEGV in strcpy, but there may be other inconsistencies.

	> I know many vendors implements their control points based on the tv_ctrlpt,

	I don't think so. I think tv_ctrlpt is just a sample to be used with tv_device.

2013-10-28 Pino Toscano <pinotree(at)users.sourceforge.net>

	Fix compilation on GNU/Hurd

2013-10-28 Peng <howtofly(at)gmail.com>

	Fix return value of http_RecvPostMessage and update httpparser.c's comments

2013-10-17 Peng <howtofly(at)gmail.com>

	Fix return value of process_request and related subroutines
	1) Only HTTP_XXX should be return
	2) Make default return value work for process_request

2013-10-15 Peng <howtofly(at)gmail.com>

	Fix Content-Range generation bug

2013-09-10 zexian chen <chenzexian88(at)gmail.com>

	Hi,

	I had found some bugs about memory leak on libupnp-1.6.18.

	It may lead to memory leak  when calling ThreadPoolAdd() or
	ThreadPoolAddPersistent() which does not return 0.

	See the attachment for patch.

2013-09-03 Peng <howtofly(at)gmail.com>

	Fix return value of config_description_doc.

	UPNP_E_XXX should not be used instead of IXML_XXX

2013-09-03 Peng <howtofly(at)gmail.com>

	Remove faulty free in GetDescDocumentAndURL.

	temp_str, which points to part of description, should not be freed.

2013-09-02 Peng <howtofly(at)gmail.com>

	Suppose the UPnP device is listening on 192.168.1.102:49152. Use the following to send
	garbage bytes to the device:
	while true; do echo "\""; done | netcat 192.168.1.102 49152

	The device just keeps receiving these bytes and its memory usage keeps growing.
	Malicious client may exploit it to exhaust the device's memory.

	The attached patch eliminates this possibility.

2013-09-02 Peng <howtofly(at)gmail.com>

	1) restore the scanner's original cursor position in case of
	   insufficient input;
	2) free the memories allocated for a new header in case of a failure.

2013-08-13 Peng <howtofly(at)gmail.com>

	Patch to fix behavior when char is signed

	it seems to me that there is still something wrong:

	1)  the new is_qdtext_char() is incorrect.
	There is a trap if char is implemented as signed char.
	Suppose that c is '\xFF', it will be -1 when converted to an int.
	By definition, c should be qdtext:
	qdtext = <any TEXT except <">>
	TEXT = <any OCTET except CTLs, but including LWS>
	OCTET = <any 8-bit sequence of data>

	2) the character after '\\' could be either part of a quoted-pair
	(together with '\\'), or a normal qdtext, since '\\' itself can
	be treated as a qdtext. This is equivalent to saying that the
	character after '\\' in a quoted string could be ANY octet.

	A patch based on the above two observations is attached.

	Peng

2013-08-13 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

	Enforce RFC 2616 and accept "0" after a backslash for quoted-strings.

	Reported by Peng <howtofly(at)gmail.com>

2013-08-13 Peng <howtofly(at)gmail.com>

	Patch to make scanner_get_token more robust (avoid over-reading).

2013-07-30 Zheng Peng <darkelf2010(at)users.sf.net>

	SF ticket #116 UpnpRemoveVirtualDir wrong linked list operation

	What if pVirtualDirList has two nodes and what we want to delete is the
	first one. Patch attached.

2013-07-30 Sebastian Brandt <s.brandt(at)aixtrusion.de>

	Dear libupnp-devels,
	when POST'ing to the simple web server in libupnp, the application crashes.
	This is caused by a missing "..." argument in webserver.c:1533.
	Seems it has been there for a long time ... 1.6.9 and 1.6.18 have it.

	webserver.c:1533 calls http_MakeMessage
	/* Send response. */
	http_MakeMessage(&headers, 1, 1,
		 "RTLSXcCc",
		 ret, "text/html", X_USER_AGENT);
	The format parameter RTLSXcCc needs four arguments -
	R - response code - ret,
	T- content type - text/html,
	L - struct SendInstruction * - NOT PRESENT
	X - user agent - X_USER_AGENT

	This results in a crash.

	Changing to
	http_MakeMessage(&headers, 1, 1,
		 "RTLSXcCc",
		 ret, "text/html", &RespInstr, X_USER_AGENT);
	solves the situation.

	Yours,
	Sebastian Brandt

*******************************************************************************
Version 1.6.18
*******************************************************************************

2012-12-06 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

	Security fix for CERT issue VU#922681

	This patch addresses three possible buffer overflows in function
	unique_service_name(). The three issues have the following CVE numbers:

	CVE-2012-5958 Issue #2: Stack buffer overflow of Tempbuf
	CVE-2012-5959 Issue #4: Stack buffer overflow of Event->UDN
	CVE-2012-5960 Issue #8: Stack buffer overflow of Event->UDN

	Notice that the following issues have already been dealt by previous
	work:

	CVE-2012-5961 Issue #1: Stack buffer overflow of Evt->UDN
	CVE-2012-5962 Issue #3: Stack buffer overflow of Evt->DeviceType
	CVE-2012-5963 Issue #5: Stack buffer overflow of Event->UDN
	CVE-2012-5964 Issue #6: Stack buffer overflow of Event->DeviceType
	CVE-2012-5965 Issue #7: Stack buffer overflow of Event->DeviceType

2012-06-19 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Fix memory leak and access violation in UpnpSendAction(Ex)Async.

	Free buffers after malloc or ixmlPrintNode failure.
	Free Param->Header before destructing Param.

2012-05-25 Anoop Mohan <anoop.anoop(at)gmail.com>

	This patch fixes a bug in non blocking connect call where the sock
	option length for SO_ERROR was passed as 0 instead of sizeof(int).

2012-04-24 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Disable SetGenaCallback call if device is disabled.

	If device is disabled, SetGenaCallback definition is disabled,
	but its call remains. A link error will occur in Win32.

2012-04-21 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Fix condition for allocation failure in get_content_type().

	At the end of get_content_type() in webserver.c, it should check
	return value of ixmlCloneDOMString().

2012-04-21 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Fix problems detected as dead assignment warning by clang scan-build.

	Wrong assignment by shutdown result hides the real error code
	of NewRequestHandler() in ssdp_device.c.
	Fix return code description of NewRequestHandler().
	Handle return code from ithread_create in sample applications.
	Remove unused assignments.

2012-04-20 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Avoid dereference of null pointer in ixmlNode_setNodeProperties.

	The problem can occur if one of the arguments is NULL.
	Test argument and fix assertion.

2012-04-17 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Create intermediate directory per project on vc9.

	Sample applications share sample_util.c and collisions of
	object file can occur in parallel build. Modify project files to
	split intermediate directories against it.
	Apply similar changes also to library projects, like vc10 projects.

2012-04-11 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Avoid access violation after parser_parse_chunky_headers call.

	In parser_parse_chunky_headers, parser->msg.msg.buf can be changed
	by membuffer_delete call. Therefore if we save the pointer to
	parser->msg.entity.buf before calling membuffer_delete, it will
	induce access to released memory.

2012-04-06 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Remove possibility of access violation.

	1. Test Instr before dereference it in http_RecvPostMessage.
	(Though it never becomes NULL because NULL is not passed to
	the static method)
	2. Avoid strdup(NULL) in ixmlElement_setAttributeNS.
	Those are detected by llvm scan-build.

2012-04-05 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	SF Bug Tracker id 3507819 - Use of thread-unsafe gmtime() in httpreadwrite.c

	Submitted: zephyrus ( zephyrus00jp ) - 2012-03-18 06:31:00 PDT

	Define http_gmtime_r and web_server_asctime_r and use it.
	Those prefix are added since pthread for Win32 already
	has macro gmtime_r and asctime_r.

2012-04-05 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Fix type of local variable stopSock in RunMiniServer()

	The variable is declared as SOCKET, but it is used to
	store return value of int receive_from_stopSock(...).
	The type was changed in the commit
	4b47e6a51d9c7049a862695b68de75699e023551 by mistake.

2012-04-03 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Compilation optimization

	Do not compile the code related to the webserver in http_SendMessage
	when --disable-webserver is set

*******************************************************************************
Version 1.6.17
*******************************************************************************

2012-04-02 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3514145 - Memory leak fix in threadutil

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-04-02 06:49:20 PDT

	Put thread in a detached state when calling ithread_create otherwise in
	some circumstances, thread can end before the call to ithread_detach.

2012-03-30 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Add --enable-unspecified_server

	Add --enable-unspecified_server configure option to set to "Unspecified"
	the OS name, OS version, product name and product version normally
	contained in the SERVER header as this could be used by an attacker.

2012-03-29 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Removing implicit casts in miniserver.c

	Removing implicit integer or enum casts in miniserver.c.

2012-03-29 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3512833 - Miniserver is wrongly disabled

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-29 07:36:34 PDT

	Miniserver is disabled if EXCLUDE_GENA, EXCLUDE_SOAP and
	EXCLUDE_WEBSERVER are set.
	However, SSDP needs the Miniserver to answer to M-SEARCH requests.
	So, MiniServer should not be disabled if EXCLUDE_SSDP is not also set.

2012-03-26 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	SF Bug Tracker id 3510693 - build fail with --disable-device

	Use INCLUDE_DEVICE_APIS instead of UPNP_HAVE_DEVICE as in other sources.
	Don't use soap_device_callback if INCLUDE_DEVICE_APIS is not set,
	otherwise link error occur on Windows.

2012-03-26 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3511149 - --disable-ssdp has no effect

	Submitted: Yoichi NAKAYAMA ( yoichi ) - 2012-03-25 18:14:34 PDT

	There are typos in upnp/src/inc/config.h "EXCLUDE_SSSDP" (should be
	EXCLUDE_SSDP), therefore EXCLUDE_SSDP is always 0, and --disable-ssdp
	has no effect.

2012-03-24 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Remove implicit casts

	Cast parameters of htonl in uint32_t in IN6_IS_ADDR_GLOBAL and
	IN6_IS_ADDR_ULA definitions.
	Remove comparison with 0 in while statement of vfmatch,
	http_SendMessage and http_MakeMessage.

2012-03-24 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	SF Bug Tracker id 3510693 - build fail with --disable-device

	GetDeviceHandleInfo just fail without using undefined member DeviceAf
	if UPNP_HAVE_DEVICE is not defined.
	Move ContentTypeHeader definition to soap_common.c, since it is
	also used in soap_ctrlpt.c.

*******************************************************************************
Version 1.6.16
*******************************************************************************

2012-03-18 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Replace sprintf by snprintf in http_WriteHttpPost

	Replace sprintf by snprintf in http_WriteHttpPost to avoid buffer
	overflow.

2012-03-18 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Add infoSize parameter to get_sdk_info

	Add infoSize parameter to get_sdk_info function to replace sprintf call
	by a snprintf call.

2012-03-16 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Check return code in ixml

	Check return code of ixmlDocument_CreateElementEx in
	ixmlDocument_CreateElement.
	Check return code of ixmlNode_setNodeName and ixmlNode_setNodeValue in
	ixmlNode_cloneCDATASect and ixmlNode_cloneTextNode.

2012-03-16 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Add more explicit casts and remove dead code

	Comment unused SERVER from DeviceShutdown.
	Comment unused max from parse_hostport.
	Comment unused nodeptr from ixmlNode_cloneDoc.
	Comment unused newNode from Parser_hasDefaultNamespace.
	Comment unused Parser_parseReference function
	Check return code of shutdown and display an error if needed.

2012-03-15 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Fix previous commit

	Replace HAVE_UPNP_OPTSSDP by UPNP_HAVE_OPTSSDP in upnpapi.c.

2012-03-15 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Add --disable-optssdp option

	Modify configure.ac to add --disable-optssdp option. This option will
	remove OPT, 01-NLS and X_USER_AGENT headers from SSDP messages as those
	headers are optional. If --disable-gena and disable-optssdp are both
	used, uuid part will not be compiled anymore.

2012-03-15 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Bug fix in ixmlNode_allowChildren

	Commit d48d73720bd325062c4d3b9ce85f3944be4f562d added a bug in
	ixmlNode_allowChildren, this function was returning FALSE instead of
	TRUE when newChild->nodeName was eELEMENT_NODE.

2012-03-15 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Improve upnp/genlib/net

	Change ret_code from int to parse_status_t in match.
	Set back return code of ReadResponseLineAndHeaders from parse_status_t
	to int as this function can return UPNP_E_BAD_HTTPMSG. As a result, do
	not cast the result of this function into parse_status_t in
	http_OpenHttpGetProxy and http_OpenHttpGetEx.
	Use switch with PARSE_OK in parsetools.c.
	Add missing explicit casts of integer constants in uri.c and
	httpreadwrite.c.
	Use switch, int and sa_family_t with AF_INET in uri.c.
	Print an error in http_Download if realloc failed.

2012-03-14 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Use switch instead of if with enums in upnpapi.c

	Replace if statements with switch when using HND_DEVICE and HND_CLIENT
	enum constants.
	Correct also UpnpUnRegisterRootDeviceLowPower and UpnpUnRegisterClient
	as those functions were wrongly awaiting an UPNP_E_INVALID_HANDLE
	instead of HND_INVALID from GetHandleInfo.

2012-03-14 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Improve ssdp part

	Do not compile CreateClientRequestPacketUlaGua if IPv6 is disable.
	Cast DestAddr->sa_family from sa_family_t into int when calling
	CreateServicePacket as this function has been set back to accept int in
	a692e591defe6ed9a617b9b4a083964a01f7bbab.
	Use switch instead of if with AF_INET and AF_INET6.
	Add missing casts from AF_INET and AF_INET6 into sa_family_t when using
	them to set sin_family and sin6_family.
	Add missing explicit casts into size_t or lu when using	integer
	constants with strlen or unsigned long indexes.
	Set SSDP_PAUSE to be unsigned as it is used with usleep.

2012-03-14 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Use switch instead of if with enums in ixml

	Replace if statements with switch when using enums in ixml.
	Remove unneeded initialization in ixmlAttr_init, Parser_init and
	ixmlNode_init which was added by wrongly added in commit
	06660b6383c438e4e2c9ca9854077cecc4da9e5d.

2012-03-14 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Use switch instead of if with enums in threadutil

	Replace if statements with switch when using enums in threadutil.

2012-03-14 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Fix missing break in http_RecvMessage

	There was a missing break in PARSE_INCOMPLETE_ENTITY due to commit
	2eb3e069badd5c8676738c3ead37f9551fd8448e.

2012-03-14 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Fix parse failure observed with tvdevice sample.

	Commit c40d2bc0c9b60c43b641ac4669c7b8bbcd6134c5 has a problem
	at removing the parentheses in parser_parse_responseline.
	Difference of pointers was used with intention, don't cast
	them separately.

2012-03-14 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Fix compile error on Windows.

	Include UpnpStdInt.h for ssize_t.
	Define sa_family_t in UpnpInet.h.

2012-03-14 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Avoid ambiguous change of SsdpEvent in unique_service_name.

	Handle overflow before changing SsdpEvent.
	Because the behavior of "snprintf" is platform dependent in such case.

2012-03-14 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	SF Bug Tracker id 3502958 - The commit 5944960e prevents a pupnp client
        (amule) from receiving replies from an IGD device.

	Previous change broke the feature. The error of unique_service_name
	in ssdp_request_type should be ignored.
	This reverts commit 5944960e172a797a9fcc196291f4046cafa7f6ec.

2012-03-13 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

	Address family is an int

	Reference: "man 2 socket".

2012-03-11 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Remove more implicit casts in upnp part

	Remove more "implicit integer or enum conversions" errors as well as
	dead code.

2012-03-11 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Remove more implicit casts in upnp part

	Remove more "implicit integer or enum conversions" as well as memset
	before snprintf.

2012-03-11 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Avoid out of range access in CheckOtherHTTPHeaders.

	There was a problem in HDR_ACCEPT_LANGUAGE case.
	It may read from TmpBuf larger amount than allocated,
	since condition was always true.
	Terminate RespInstr->AcceptLanguageHeader correctly.
	Skip allocation if there is already sufficient buffer.

2012-03-10 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Remove some of the implicit cast in upnp part

	Remove some of the "implicit integer or enum conversions" as well as
	some access to NULL reference in upnp part.

2012-03-10 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Remove lock in ThreadPoolInit

	If ThreadPoolInit returned EAGAIN, tp->lock was not freed.

2012-03-10 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Improve ixml

	Remove "implicit integer conversions" and
	"dereference NULL return value" errors in ixml part.

2012-03-10 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Exclude IPv6 stuff in SearchByTarget when UPNP_ENABLE_IPV6 is not defined.

2012-03-10 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Further measures against buffer overflows.

	* Pass output buffer size to CreateClientRequestPacket(UlaGua)
	  from SearchByTarget and detect overflow.
	* Handle SearchByTarget error in UpnpSearchAsync.
	* Pass output buffer size to addrToString and detect overflow.
	* Handle addrToString error in configure_urlbase.
	* Handle overflow in http_SendMessage.
	* Respect unique_service_name error in ssdp_request_type
	  so as not to touch non-terminated buffer under Evt.
	* Treat large argument as error in UpnpAddVirtualDir.
	* Use strncpy with the standard way in readFromSSDPSocket.
	* Do not clear buffer before snprintf.
	* Clarify the last argument of GetDescDocumentAndURL has size LINE_SIZE.
	* For inet_ntop, use buffer with size INET6_ADDRSTRLEN or INET_ADDRSTRLEN.

2012-03-10 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Handle allocation error in strndup to avoid access violation.

	Return NULL before calling strncpy.
	Platforms with HAVE_STRNDUP are not affected.

2012-03-10 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Synchronize autoconfig.h with upnpconfig.h.

	It fixes WIN32 build where configure is not invoked.

2012-03-09 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	More compilation optimization

	Do not compile most of service_table.c and client_table.c if
	--disable-gena is used.
	Do not compile urlconfig.c if --disable-webserver is used.
	Adding new UPNP_HAVE_xxx variables in upnpconfig.h and upnpconfig.h.in.

2012-03-09 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Optimization of --disable-webserver

	Do not compile webserver.c if --disable-webserver is used.

2012-03-09 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Improve threadutil

	Remove "dereference NULL return" errors and implicit conversions to
	double or enum types.

2012-03-09 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Optimization of --disable-webserver

	Do not compile miniserver.c if --disable-webserver is used.

2012-03-09 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Adding configure options

	Adding --disable-ssdp, --disable-soap, --disable-gena options to
	configure script.

2012-03-09 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Bug fix of last commit

	_snprintf was wrongly defined in ssdp_server.c

2012-03-09 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3499781 - msvc doesn't have snprintf

	Submitted: Yoichi NAKAYAMA ( yoichi ) - 2012-03-08 10:18:39 PST

	97a17ff5add73c97844e2fa74456bab4df0800f1 commit breaks build on
	windows/msvc since there is no snprintf.

	Note:
	* Some existing sources use _snprintf when WIN32 is defined, but its
	behavior is a bit different from C99 snprintf.
	* snprintf does terminate the buffer, so the commit (use buffer size
	minus 1 as argument) changes the behavior at the boundary.
	* Truncation might be better than crash in some cases. But it may
	result in not good.

2012-03-08 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

	SF Bug Tracker id 3499878 - UpnpUnSubscribeAsync(): ‘retVal’ may be used uninitialized

	Submitted: Marcelo Roberto Jimenez ( mroberto ) - 2012-03-08 12:38:57 PST

	src/api/upnpapi.c: In function ‘UpnpUnSubscribeAsync’:
	src/api/upnpapi.c:2060:6: warning: ‘retVal’ may be used uninitialized in this function

2012-03-08 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

	SF Bug Tracker id 3175217 - Crash bug in Parser_addNamespace()

	Submitted: Terry Farnham ( tfarnham ) - 2011-02-07 09:25:25 PST

	Details: The strcmp(pNode->prefix,pCur->prefix) crashes on pCur->prefix
	being NULL. This occurs on invalidly formatted xml where a node uses an
	undefined namespace. I would expect to receive IXML_FAILED in this
	situation.

2012-03-08 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Removing access to NULL pointers in node.c and element.c

	Check that newNode is not NULL ixmlNode_cloneNodeTree and pass newAttr
	as the return node in the ixmlElement_setAttributeNodeNS call of
	ixmlElement_setAttributeNS.

2012-03-08 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Memory leaks correction in upnpapi.c

	Fix memory leaks in UpnpUnSubscribe, SendActionExAsync and
	RenewSubscription.

2012-03-08 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3496993 - Write after free in ixmlNode_insertBefore

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-05 04:54:40 PST

	If ixmlNode_isParent(nodeptr, newChild) returns TRUE,
	ixmlNode_removeChild(nodeptr, newChild, NULL) will free newChild before
	the modifications of newChild->nextSibling and newChild->prevSibling.

2012-03-08 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Remove most of strcpy, sprintf and strcat

	Replace strcpy, sprintf and strcat by strncpy, snprintf and strncat to
	avoid buffer overflows.

2012-03-07 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	SF Bug Tracker id 3497714 - Buffer overflows

	Fix compile error on WIN32.

	Local variables must be declared first.
	Remove outdated comment.

2012-03-07 Yoichi NAKAYAMA <yoichi.nakayama(at)gmail.com>

	Avoid access violation in assertion.

	xmlParser->pCurElement was dereferenced before null check.
	Affects debug build only.

2012-03-07 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Remove SIZEOF_MISTACH error in notify_send_and_recv

	Replace sizeof(CRLF) by strlen(CRLF) as CRLF is a const char*.

2012-03-07 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3498442 - Memory leak in get_file_info

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-07 02:44:30 PST

	info->contentType is not freed before being set to NULL.

2012-03-07 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3498439 - Memory leak in removeServiceTable

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-07 02:35:46 PST

	UDN is not freed.

2012-03-07 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3498436 - Memory leak in Parser_processAttributeName

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-07 02:30:57 PST

	attr is not freed if ixmlNode_setNodeProperties or
	ixmlNode_setAttributeNode return an error in
	Parser_processAttributeName.

2012-03-07 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Fixing an error in d6db7c555d0f11856ce5e3e479b16a4cf4689107 commit

	Evt.Sid should not be cast into char* when calling sizeof otherwise
	size will be 4.

2012-03-06 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Removing two unused variables in ssdp_server.c

	Removing first TempPtr allocation in unique_service_name as well as one
	of the dbgStr allocation in AdvertizeAndReply as those values were not
	used.

2012-03-06 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3497714 - Buffer overflows

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-06 07:36:08 PST

	Call to strcpy should be replaced by call to memset and strncpy to
	avoid getting buffer overflows.

2012-03-05 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

	SF Bug Tracker id 2989399 - UpnpSetVirtualDirCallbacks API removal in 1.6.x

	Submitted: Nick Leverton ( leveret ) - 2010-04-19 07:44:10 PDT

	Details: The recent codebase merge has removed a significant API call
	which is used by several pupnp devices such as mediatomb and gmediaserver.
	UpnpSetVirtualDirCallbacks() has been replaced by individual routines to
	set each callback. Essentially this means that 1.6.7 will in fact be a major
	bump and 1.6.6 devices can no longer link against it. Could we have the call
	reinstated please, perhaps as a wrapper around the individual calls ? As
	it is, all distros will have to patch their 1.6.x apps, rebuild and re-link them.

	The other removed API calls and external variables don't seem to be used
	by any of the apps I have copies of, but UpnpSetVirtualDirCallbacks is
	important for maintaining compatibility within 1.6.x.

2012-03-05 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

	SF Bug Tracker id 3325246 - Memory Leak in XML Parser

	Submitted: Terry Farnham ( tfarnham ) - 2011-06-23 09:45:54 PDT

	Details: The following bit of xml results in a memory leak from the xml
	parser:

	const char *xmlbuffer="<?xml version=\"1.0\" encoding=\"utf-8\"?>
	<root xmlns=\"urn:schemas-upnp-org:device-1-0\" xmlns:dlna=\"urn:schemas-dlna-org:device-1-0\">
	<dlna:X_DLNADOC xmlns:dlna=\"urn:schemas-dlna-org:device-1-0\">DMS-1.50</dlna:X_DLNADOC></root>";

	When I execute the following code:

	IXML_Document *doc = ixmlParseBuffer(xmlbuffer);
	ixmlDocument_free(doc);

	It results in a memory leak in ixmlparser.c line 2107 where it calls
	safe_strdup( newElement->namespaceURI ); It's difficult to figure out why.

2012-03-05 Marcelo Roberto Jimenez <mroberto(at)users.sourceforge.net>

	SF Bug Tracker id 3417134 - Crash seen in UpnpFinish

	Submitted: Sunil ( sunilangadi ) - 2011-10-02 08:28:47 PDT

	Details: I observed crash in the below mentioned log statement in
	function upnpfinish(file: upnpapi.c).
	UpnpPrintf(UPNP_INFO, API, __FILE__, __LINE__, "Exiting UpnpFinish:
		UpnpSdkInit is :%d:\n", UpnpSdkInit);

	In particular it was crashing in ithread_self in
	UpnpDisplayFileAndLine(file upnpdebug.c) on WIN32.

	Moving the call ithread_cleanup_library() below the upnp printf call
	mentioned above in function upnpfinish fixed the crash but I couldn't get
	to the root of the problem.

	The problem was observed on WIN32.


2012-03-05 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3497159 - Bug fix in Parser_readFileOrBuffer

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-05 14:20:58 PST

	fileSize = ftell( xmlFilePtr ); can return a negative value, in this
	 case the function should exit (at the moment, the function exits only
	if ftell returns 0).

2012-03-05 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3497140 - Bug fix in http_get_code_text

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-05 13:07:03 PST

	Replace if( statusCode < 100 && statusCode >= 600 ) which can't be true
	by if( statusCode < 100 || statusCode >= 600 ).

2012-03-05 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3497126 - Resource leak in http_RecvPostMessage

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-05 12:33:59 PST

	Fp is not closed when an error is raised on membuffer_append or
	sock_read.

2012-03-05 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3497034 - Buffer not null terminated in UpnpGetIfInfo

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-05 06:43:52 PST

	gIF_NAME might be not null terminated.

2012-03-05 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3497033 - Buffer not null terminated in UpnpInit

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-05 06:42:18 PST

	gIF_IPV4, gIF_IPV6 and gIF_IPV6_ULA_GUA might be not null terminated.
	Moreover, gIF_IPV4 should be 16 characters (INET_ADDRSTRLEN) and not 22
	and gIF_IPV6 should be 46 characters (INET6_ADDRSTRLEN) and not 65.

2012-03-05 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Bug fix of latest commit (parse_hostport)

	Missing parenthesis in memset.

2012-03-05 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3497027 - Buffer not null terminated in parse_hostport

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-05 06:28:38 PST

	workbuf might be not null terminated.

2012-03-05 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3497009 - Resource leak in http_SendMessage

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-05 05:51:44 PST

	Fp is not closed if fseeko(Fp, Instr->RangeOffset, SEEK_CUR) does not return 0.

2012-03-05 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	HInfo->ServiceTable initialization in UpnpRegisterRootDevice2 and UpnpRegisterRootDevice4

	Initialize also HInfo->ServiceTable in UpnpRegisterRootDevice2 and
	UpnpRegisterRootDevice4 functions

2012-03-05 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3496703 - Handle_Info::ServiceList may have undefined value

	Submitted: Yoichi NAKAYAMA ( yoichi ) - 2012-03-03 20:49:25 PST

	In UpnpRegisterRootDevice(), HInfo->ServiceTable is not initialized and
	getServiceTable() may leave it intact. It will cause crash on
	freeServiceTable() called from UpnpUnRegisterRootDevice().

2012-03-05 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3496702 - TvDeviceStop is called even if Start failed

	Submitted: Yoichi NAKAYAMA ( yoichi ) - 2012-03-03 20:35:08 PST

	In sample tvdevice, error of device_main() is not handled, and
	TvDeviceStop() cause crash.

2012-03-05 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3496942 - Memory leak in config_description_doc

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-05 01:55:54 PST

	element was not freed if membuffer_append_str(&url_str, "http://") does
	not return 0. Moreover addNew was not used.

2012-03-05 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3496938 - Missing structures initialization in some functions

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-05 01:31:16 PST

	Memsetting to 0 some of the structures: finfo in process_request,
	job in readFromSSDPSocket, request in http_OpenHttpGetEx, job in
	genaNotifyThread, job in genaNotifyAllExt, job in genaNotifyAll,
	job in genaInitNotifyExt, job in genaInitNotify, LocalAddr in
	getlocalhostname.

2012-03-05 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3496934 - Memory leaks in getlocalhostname and UpnpGetIfInfo

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-05 01:25:42 PST

	LocalSock is not closed if ioctl(LocalSock, SIOCGIFCONF, &ifConf);
	returns an error.

2012-03-05 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3496933 - Out-of-bounds access in CheckOtherHTTPHeaders

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-05 01:15:34 PST

	An out-of-bands access is raised because size of
	RespInst->AcceptLanguageHeader is 200 and TmpBuf size is 180.

2012-03-05 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	Remove unused currentDevice variable in removeServiceTable

	currentDevice is not used in this function.

2012-03-05 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3496581 - Memory leak in getServiceList

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-03-03 08:43:23 PST

	serviceNodeList is not freed if
	current->next = malloc(sizeof(service_info)); returns NULL.

2012-02-29 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3495616 - Memory leak in ixmlElement_setAttributeNS

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-02-29 02:09:43 PST

	newAttrNode is not freed if newAttr->n.nodeValue = strdup(value); returns
	NULL or if ixmlElement_setAttributeNodeNS(element, newAttr, NULL) does
	not return IXML_SUCCESS.

2012-02-28 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3495286 - Double free in get_action_node

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-02-28 04:27:54 PST

	ixmlFreeDOMString(ActNodeName); is called twice if
	ixmlParseBufferEx(ActNodeName, RespNode); does not return IXML_SUCCESS.

2012-02-28 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3495280 - Memory leak in ixmlDocument_createElementEx

	Submitted: Fabrice Fontaine ( ffontaine ) - 2012-02-28 04:01:02 PST

	There is a memory leak in ixmlDocument_createElementEx:
	newElement->tagName is not freed if
	newElement->n.nodeName = strdup(tagName); returns NULL.

2012-02-27 Fabrice Fontaine <fabrice.fontaine(at)orange.com>

	SF Bug Tracker id 3494865 - Use of non-initialized variable in parser_parse_requestline

	Submitted: Marcelo Roberto Jimenez ( mroberto ) - 2012-02-26 16:50:23 PST

	src/genlib/net/http/httpparser.c: In function ‘parser_parse_requestline’:
	src/genlib/net/http/httpparser.c:1319:28: warning: ‘index’ may be used uninitialized in this function
